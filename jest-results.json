{"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":14,"numPassedTests":142,"numPendingTestSuites":0,"numPendingTests":5,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":15,"numTotalTests":151,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1754906499625,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["NearRelayer","Initialization"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Initialization should initialize with valid configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should initialize with valid configuration"},{"ancestorTitles":["NearRelayer","Initialization"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Initialization should throw error with invalid configuration - missing NEAR account","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error with invalid configuration - missing NEAR account"},{"ancestorTitles":["NearRelayer","Initialization"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Initialization should throw error with invalid Ethereum factory address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error with invalid Ethereum factory address"},{"ancestorTitles":["NearRelayer","Lifecycle Management"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Lifecycle Management should start relayer successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should start relayer successfully"},{"ancestorTitles":["NearRelayer","Lifecycle Management"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Lifecycle Management should stop relayer successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should stop relayer successfully"},{"ancestorTitles":["NearRelayer","Event Handling"],"duration":82,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Event Handling should poll NEAR blocks and emit events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should poll NEAR blocks and emit events"},{"ancestorTitles":["NearRelayer","Event Handling"],"duration":84,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.<anonymous> (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/NearRelayer.test.ts:271:23)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:546:9)"],"fullName":"NearRelayer Event Handling should handle swap order completed event","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle swap order completed event"},{"ancestorTitles":["NearRelayer","Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Error Handling should handle NEAR provider connection errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle NEAR provider connection errors"},{"ancestorTitles":["NearRelayer","Integration Scenarios"],"duration":164,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m1\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m2\u001b[39m\nReceived number of calls: \u001b[31m1\u001b[39m\n    at Object.<anonymous> (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/NearRelayer.test.ts:405:23)"],"fullName":"NearRelayer Integration Scenarios should handle complete NEAR to Ethereum flow","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle complete NEAR to Ethereum flow"},{"ancestorTitles":["NearRelayer","Constructor and Configuration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Constructor and Configuration should create relayer with valid configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create relayer with valid configuration"},{"ancestorTitles":["NearRelayer","Constructor and Configuration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Constructor and Configuration should throw error with invalid configuration - missing NEAR account","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error with invalid configuration - missing NEAR account"},{"ancestorTitles":["NearRelayer","Constructor and Configuration"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Constructor and Configuration should throw error with invalid Ethereum factory address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error with invalid Ethereum factory address"},{"ancestorTitles":["NearRelayer","Lifecycle Management"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Lifecycle Management should start relayer successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should start relayer successfully"},{"ancestorTitles":["NearRelayer","Lifecycle Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Lifecycle Management should stop relayer successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should stop relayer successfully"},{"ancestorTitles":["NearRelayer","Lifecycle Management"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Lifecycle Management should handle multiple start calls gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle multiple start calls gracefully"},{"ancestorTitles":["NearRelayer","Message Processing"],"duration":6,"failureDetails":[{"code":"CONTRACT_ERROR","details":{"contractAddress":"escrow.test.near","method":"create_swap_order","params":{"recipient":"test.near","hashlock":"0x1212121212121212121212121212121212121212121212121212121212121212","timelockDuration":1754910100,"attachedDeposit":"1000000000000000000"},"context":"Failed to process message: deposit-123","messageId":"deposit-123","messageType":"DEPOSIT"},"timestamp":{},"name":"RelayerError"}],"failureMessages":["RelayerError: Failed to process message: deposit-123: Failed to process deposit message: NEAR swap order creation failed\n    at Function.handleAndRethrow (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/src/utils/errors.ts:188:13)\n    at NearRelayer.processMessage (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/src/relay/NearRelayer.ts:202:26)\n    at Object.<anonymous> (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/NearRelayer.test.ts:500:7)"],"fullName":"NearRelayer Message Processing should process deposit message successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should process deposit message successfully"},{"ancestorTitles":["NearRelayer","Message Processing"],"duration":2,"failureDetails":[{"code":"ORDER_NOT_FOUND","details":{"messageId":"test-withdraw-1","secretHash":"0x1ade9f553ac636b4081983b175c3bbe991dd726b1cdbdb2588588cf5442bf50b","context":"Failed to process message: test-withdraw-1","messageType":"WITHDRAWAL"},"timestamp":{},"name":"RelayerError"}],"failureMessages":["RelayerError: Failed to process message: test-withdraw-1: Failed to process withdrawal message: No matching NEAR order found for withdrawal\n    at Function.handleAndRethrow (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/src/utils/errors.ts:188:13)\n    at NearRelayer.processMessage (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/src/relay/NearRelayer.ts:202:26)\n    at Object.<anonymous> (/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/NearRelayer.test.ts:553:7)"],"fullName":"NearRelayer Message Processing should process withdrawal message successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should process withdrawal message successfully"},{"ancestorTitles":["NearRelayer","Message Processing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Message Processing should skip already processed messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should skip already processed messages"},{"ancestorTitles":["NearRelayer","Event Handling"],"duration":82,"failureDetails":[],"failureMessages":[],"fullName":"NearRelayer Event Handling should handle swap order created event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle swap order created event"}],"endTime":1754906500806,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNearRelayer › Event Handling › should handle swap order completed event\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m1\u001b[39m\n    Received number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 269 |\u001b[39m       \u001b[36mawait\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mPromise\u001b[39m((r) \u001b[33m=>\u001b[39m setTimeout(r\u001b[33m,\u001b[39m \u001b[35m80\u001b[39m))\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 270 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 271 |\u001b[39m       expect(sendSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 272 |\u001b[39m       \u001b[36mawait\u001b[39m relayer\u001b[33m.\u001b[39mstop()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 273 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 274 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/NearRelayer.test.ts\u001b[39m\u001b[0m\u001b[2m:271:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNearRelayer › Integration Scenarios › should handle complete NEAR to Ethereum flow\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m2\u001b[39m\n    Received number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 403 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 404 |\u001b[39m       \u001b[90m// Verify the follow-up transaction was sent\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 405 |\u001b[39m       expect(sendSpy)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 406 |\u001b[39m       \u001b[36mawait\u001b[39m relayer\u001b[33m.\u001b[39mstop()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 407 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 408 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/NearRelayer.test.ts\u001b[39m\u001b[0m\u001b[2m:405:23)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNearRelayer › Message Processing › should process deposit message successfully\u001b[39m\u001b[22m\n\n    RelayerError: Failed to process message: deposit-123: Failed to process deposit message: NEAR swap order creation failed\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 186 |\u001b[39m       \u001b[90m// Add context to existing relayer error\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 187 |\u001b[39m       \u001b[36mconst\u001b[39m enhancedDetails \u001b[33m=\u001b[39m normalizeDetails({ \u001b[33m...\u001b[39merror\u001b[33m.\u001b[39mdetails\u001b[33m,\u001b[39m context\u001b[33m,\u001b[39m \u001b[33m...\u001b[39madditionalDetails })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 188 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mRelayerError\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 189 |\u001b[39m         \u001b[32m`${context}: ${error.message}`\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 190 |\u001b[39m         error\u001b[33m.\u001b[39mcode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 191 |\u001b[39m         enhancedDetails\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.handleAndRethrow (\u001b[22m\u001b[2msrc/utils/errors.ts\u001b[2m:188:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NearRelayer.processMessage (\u001b[22m\u001b[2msrc/relay/NearRelayer.ts\u001b[2m:202:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/NearRelayer.test.ts\u001b[39m\u001b[0m\u001b[2m:500:7)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mNearRelayer › Message Processing › should process withdrawal message successfully\u001b[39m\u001b[22m\n\n    RelayerError: Failed to process message: test-withdraw-1: Failed to process withdrawal message: No matching NEAR order found for withdrawal\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 186 |\u001b[39m       \u001b[90m// Add context to existing relayer error\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 187 |\u001b[39m       \u001b[36mconst\u001b[39m enhancedDetails \u001b[33m=\u001b[39m normalizeDetails({ \u001b[33m...\u001b[39merror\u001b[33m.\u001b[39mdetails\u001b[33m,\u001b[39m context\u001b[33m,\u001b[39m \u001b[33m...\u001b[39madditionalDetails })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 188 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mRelayerError\u001b[39m(\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 189 |\u001b[39m         \u001b[32m`${context}: ${error.message}`\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 190 |\u001b[39m         error\u001b[33m.\u001b[39mcode\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 191 |\u001b[39m         enhancedDetails\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Function.handleAndRethrow (\u001b[22m\u001b[2msrc/utils/errors.ts\u001b[2m:188:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat NearRelayer.processMessage (\u001b[22m\u001b[2msrc/relay/NearRelayer.ts\u001b[2m:202:26)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/integration/NearRelayer.test.ts\u001b[39m\u001b[0m\u001b[2m:553:7)\u001b[22m\u001b[2m\u001b[22m\n","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/NearRelayer.test.ts","startTime":1754906499924,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Partial Fill Integration Tests","NEAR Partial Fill Processing"],"duration":58,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests NEAR Partial Fill Processing should process partial fill for NEAR order","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should process partial fill for NEAR order"},{"ancestorTitles":["Partial Fill Integration Tests","NEAR Partial Fill Processing"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests NEAR Partial Fill Processing should split NEAR order into multiple child orders","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should split NEAR order into multiple child orders"},{"ancestorTitles":["Partial Fill Integration Tests","NEAR Partial Fill Processing"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests NEAR Partial Fill Processing should handle partial fill via public API (NEAR)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle partial fill via public API (NEAR)"},{"ancestorTitles":["Partial Fill Integration Tests","NEAR Partial Fill Processing"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests NEAR Partial Fill Processing should handle refund via service API (NEAR)","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle refund via service API (NEAR)"},{"ancestorTitles":["Partial Fill Integration Tests","Ethereum Partial Fill Processing"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Ethereum Partial Fill Processing should process partial fill for Ethereum order","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should process partial fill for Ethereum order"},{"ancestorTitles":["Partial Fill Integration Tests","Ethereum Partial Fill Processing"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Ethereum Partial Fill Processing should split Ethereum order into multiple child orders","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should split Ethereum order into multiple child orders"},{"ancestorTitles":["Partial Fill Integration Tests","Ethereum Partial Fill Processing"],"duration":33,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Ethereum Partial Fill Processing should handle partial fill events from Ethereum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle partial fill events from Ethereum"},{"ancestorTitles":["Partial Fill Integration Tests","Ethereum Partial Fill Processing"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Ethereum Partial Fill Processing should handle refund events from Ethereum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle refund events from Ethereum"},{"ancestorTitles":["Partial Fill Integration Tests","Cross-Chain Coordination"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Cross-Chain Coordination should coordinate partial fills between NEAR and Ethereum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should coordinate partial fills between NEAR and Ethereum"},{"ancestorTitles":["Partial Fill Integration Tests","Cross-Chain Coordination"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Cross-Chain Coordination should coordinate refunds between NEAR and Ethereum","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should coordinate refunds between NEAR and Ethereum"},{"ancestorTitles":["Partial Fill Integration Tests","Edge Cases and Error Handling"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Edge Cases and Error Handling should handle invalid fill amounts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle invalid fill amounts"},{"ancestorTitles":["Partial Fill Integration Tests","Edge Cases and Error Handling"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Edge Cases and Error Handling should handle minimum fill percentage validation","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle minimum fill percentage validation"},{"ancestorTitles":["Partial Fill Integration Tests","Edge Cases and Error Handling"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Edge Cases and Error Handling should handle multiple partial fills without errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle multiple partial fills without errors"},{"ancestorTitles":["Partial Fill Integration Tests","Edge Cases and Error Handling"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Edge Cases and Error Handling should handle order splitting with invalid amounts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle order splitting with invalid amounts"},{"ancestorTitles":["Partial Fill Integration Tests","Edge Cases and Error Handling"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Edge Cases and Error Handling should handle cross-chain coordination failures gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle cross-chain coordination failures gracefully"},{"ancestorTitles":["Partial Fill Integration Tests","Performance and Scalability"],"duration":27,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Performance and Scalability should handle multiple concurrent partial fills","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle multiple concurrent partial fills"},{"ancestorTitles":["Partial Fill Integration Tests","Performance and Scalability"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"Partial Fill Integration Tests Performance and Scalability should handle large order splitting efficiently","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle large order splitting efficiently"}],"endTime":1754906501413,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/PartialFillIntegration.test.ts","startTime":1754906500810,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EthereumContractService Edge Cases","getEscrowDetails"],"duration":68,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases getEscrowDetails should handle invalid escrow address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid escrow address"},{"ancestorTitles":["EthereumContractService Edge Cases","getEscrowDetails"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases getEscrowDetails should handle contract call failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle contract call failure"},{"ancestorTitles":["EthereumContractService Edge Cases","findEscrowBySecretHash"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases findEscrowBySecretHash should handle empty secret hash","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty secret hash"},{"ancestorTitles":["EthereumContractService Edge Cases","findEscrowBySecretHash"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases findEscrowBySecretHash should handle search with no results","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle search with no results"},{"ancestorTitles":["EthereumContractService Edge Cases","executeWithdrawal"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases executeWithdrawal should handle invalid secret","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid secret"},{"ancestorTitles":["EthereumContractService Edge Cases","executeWithdrawal"],"duration":34,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases executeWithdrawal should handle withdrawal failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle withdrawal failure"},{"ancestorTitles":["EthereumContractService Edge Cases","executeRefund"],"duration":32,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases executeRefund should handle refund failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle refund failure"},{"ancestorTitles":["EthereumContractService Edge Cases","findEscrowByParams"],"duration":31,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases findEscrowByParams should handle invalid search parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle invalid search parameters"},{"ancestorTitles":["EthereumContractService Edge Cases","findEscrowByParams"],"duration":30,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService Edge Cases findEscrowByParams should handle search with invalid block range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle search with invalid block range"}],"endTime":1754906501818,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/edge-cases/PartialFillEdgeCases.test.ts","startTime":1754906501416,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Relayer startup auctionConfig injection"],"duration":106,"failureDetails":[],"failureMessages":[],"fullName":"Relayer startup auctionConfig injection passes ConfigurationService.auction into EthereumRelayer constructor at startup","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"passes ConfigurationService.auction into EthereumRelayer constructor at startup"}],"endTime":1754906501938,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/RelayerStartupAuctionInjection.test.ts","startTime":1754906501821,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EthereumEventListener","Constructor"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Constructor should initialize with valid parameters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should initialize with valid parameters"},{"ancestorTitles":["EthereumEventListener","Constructor"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Constructor should throw error for invalid provider","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid provider"},{"ancestorTitles":["EthereumEventListener","Constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Constructor should throw error for invalid factory address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid factory address"},{"ancestorTitles":["EthereumEventListener","Constructor"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Constructor should throw error for invalid bridge address","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid bridge address"},{"ancestorTitles":["EthereumEventListener","Constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Constructor should throw error for missing handlers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw error for missing handlers"},{"ancestorTitles":["EthereumEventListener","Start/Stop"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Start/Stop should start and stop the listener","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should start and stop the listener"},{"ancestorTitles":["EthereumEventListener","Start/Stop"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Start/Stop should handle provider errors during start","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle provider errors during start"},{"ancestorTitles":["EthereumEventListener","Start/Stop"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Start/Stop should process DepositInitiated event","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should process DepositInitiated event"},{"ancestorTitles":["EthereumEventListener","Start/Stop"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Start/Stop should handle provider errors during polling","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle provider errors during polling"},{"ancestorTitles":["EthereumEventListener","Start/Stop"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Start/Stop should process EscrowCreated event","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process EscrowCreated event"},{"ancestorTitles":["EthereumEventListener","Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Error Handling should handle provider errors during polling","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle provider errors during polling"},{"ancestorTitles":["EthereumEventListener","Error Handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Error Handling should handle handler errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle handler errors gracefully"},{"ancestorTitles":["EthereumEventListener","Block Processing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EthereumEventListener Block Processing should process multiple blocks in order","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should process multiple blocks in order"}],"endTime":1754906502055,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/EthereumEventListener.test.ts","startTime":1754906501942,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EthereumRelayer - Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration starts and stops the relayer","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"starts and stops the relayer"},{"ancestorTitles":["EthereumRelayer - Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration processes a DEPOSIT message and handles EscrowCreated","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"processes a DEPOSIT message and handles EscrowCreated"},{"ancestorTitles":["EthereumRelayer - Integration"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration processes a WITHDRAWAL message","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"processes a WITHDRAWAL message"},{"ancestorTitles":["EthereumRelayer - Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration processes a REFUND message","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"processes a REFUND message"},{"ancestorTitles":["EthereumRelayer - Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration handles concurrent DEPOSIT messages","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"handles concurrent DEPOSIT messages"},{"ancestorTitles":["EthereumRelayer - Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumRelayer - Integration rapid start/stop cycles are safe","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"rapid start/stop cycles are safe"}],"endTime":1754906502151,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/EthereumRelayer.test.ts","startTime":1754906502070,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EthereumPartialFillService","processPartialFill"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService processPartialFill should process a partial fill successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process a partial fill successfully"},{"ancestorTitles":["EthereumPartialFillService","processPartialFill"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService processPartialFill should handle errors during partial fill","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors during partial fill"},{"ancestorTitles":["EthereumPartialFillService","splitOrder"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService splitOrder should split an order into multiple parts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should split an order into multiple parts"},{"ancestorTitles":["EthereumPartialFillService","processRefund"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService processRefund should process a refund successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process a refund successfully"},{"ancestorTitles":["EthereumPartialFillService","getOrderState"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService getOrderState should return the current state of an order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return the current state of an order"},{"ancestorTitles":["EthereumPartialFillService","canPartiallyFill"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService canPartiallyFill should return true if the order can be partially filled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true if the order can be partially filled"},{"ancestorTitles":["EthereumPartialFillService","canPartiallyFill"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService canPartiallyFill should return false if the order is already fully filled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false if the order is already fully filled"},{"ancestorTitles":["EthereumPartialFillService","estimateGasForPartialFill"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumPartialFillService estimateGasForPartialFill should estimate gas with a buffer","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should estimate gas with a buffer"}],"endTime":1754906502230,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/services/EthereumPartialFillService.test.ts","startTime":1754906502153,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Auction flow wiring - Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Auction flow wiring - Integration passes auctionConfig and runtime params to calculateCurrentRate during NEAR→ETH processing","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"passes auctionConfig and runtime params to calculateCurrentRate during NEAR→ETH processing"},{"ancestorTitles":["Auction flow wiring - Integration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Auction flow wiring - Integration passes auctionConfig and runtime params to calculateCurrentRate during ETH→NEAR escrow handling and uses auction output as NEAR deposit","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"passes auctionConfig and runtime params to calculateCurrentRate during ETH→NEAR escrow handling and uses auction output as NEAR deposit"}],"endTime":1754906502389,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/AuctionIntegration.test.ts","startTime":1754906502280,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["InputValidator","validateEthereumAddress"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateEthereumAddress should validate correct Ethereum addresses","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should validate correct Ethereum addresses"},{"ancestorTitles":["InputValidator","validateEthereumAddress"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateEthereumAddress should reject invalid Ethereum addresses","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"status":"passed","title":"should reject invalid Ethereum addresses"},{"ancestorTitles":["InputValidator","validateEthereumAddress"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateEthereumAddress should warn about zero address","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should warn about zero address"},{"ancestorTitles":["InputValidator","validateNearAccountId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateNearAccountId should validate correct NEAR account IDs","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should validate correct NEAR account IDs"},{"ancestorTitles":["InputValidator","validateNearAccountId"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateNearAccountId should reject invalid NEAR account IDs","invocations":1,"location":null,"numPassingAsserts":20,"retryReasons":[],"status":"passed","title":"should reject invalid NEAR account IDs"},{"ancestorTitles":["InputValidator","validateAmount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateAmount should validate correct amounts","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should validate correct amounts"},{"ancestorTitles":["InputValidator","validateAmount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateAmount should reject invalid amounts","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"status":"passed","title":"should reject invalid amounts"},{"ancestorTitles":["InputValidator","validateAmount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateAmount should allow zero when specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should allow zero when specified"},{"ancestorTitles":["InputValidator","validateAmount"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateAmount should validate min/max constraints","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate min/max constraints"},{"ancestorTitles":["InputValidator","validateSecretHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateSecretHash should validate correct secret hashes","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should validate correct secret hashes"},{"ancestorTitles":["InputValidator","validateSecretHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateSecretHash should reject invalid secret hashes","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"status":"passed","title":"should reject invalid secret hashes"},{"ancestorTitles":["InputValidator","validateTimelock"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateTimelock should validate future timelocks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate future timelocks"},{"ancestorTitles":["InputValidator","validateTimelock"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateTimelock should reject past timelocks","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject past timelocks"},{"ancestorTitles":["InputValidator","validateTimelock"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateTimelock should warn about very short/long durations","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should warn about very short/long durations"},{"ancestorTitles":["InputValidator","validateCrossChainMessage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateCrossChainMessage should validate correct cross-chain messages","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate correct cross-chain messages"},{"ancestorTitles":["InputValidator","validateCrossChainMessage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateCrossChainMessage should reject messages with missing required fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reject messages with missing required fields"},{"ancestorTitles":["InputValidator","validateCrossChainMessage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateCrossChainMessage should validate message type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate message type"},{"ancestorTitles":["InputValidator","validateCrossChainMessage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator validateCrossChainMessage should validate addresses based on chain","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should validate addresses based on chain"},{"ancestorTitles":["InputValidator","assertValid"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator assertValid should not throw for valid results","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw for valid results"},{"ancestorTitles":["InputValidator","assertValid"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"InputValidator assertValid should throw for invalid results","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw for invalid results"}],"endTime":1754906502457,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/InputValidator.test.ts","startTime":1754906502392,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["EthereumContractService","getContractDetails"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService getContractDetails should return contract details","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return contract details"},{"ancestorTitles":["EthereumContractService","getContractDetails"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService getContractDetails should handle contract errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle contract errors"},{"ancestorTitles":["EthereumContractService","executeTransaction"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService executeTransaction should execute transaction successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should execute transaction successfully"},{"ancestorTitles":["EthereumContractService","executeTransaction"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService executeTransaction should handle transaction errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle transaction errors"},{"ancestorTitles":["EthereumContractService","getSignerAddress"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService getSignerAddress should return signer address","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return signer address"},{"ancestorTitles":["EthereumContractService","getSignerAddress"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService getSignerAddress should handle signer errors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle signer errors"},{"ancestorTitles":["EthereumContractService","executeFactoryTransaction"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService executeFactoryTransaction should execute factory transaction successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should execute factory transaction successfully"},{"ancestorTitles":["EthereumContractService","executeFactoryTransaction"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EthereumContractService executeFactoryTransaction should validate input parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate input parameters"}],"endTime":1754906502510,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/EthereumContractService.test.ts","startTime":1754906502461,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ValidationService"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService should initialize ValidationService","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should initialize ValidationService"},{"ancestorTitles":["ValidationService","validateEthereumAddress"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateEthereumAddress should validate correct Ethereum addresses","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct Ethereum addresses"},{"ancestorTitles":["ValidationService","validateEthereumAddress"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateEthereumAddress should reject invalid Ethereum addresses","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid Ethereum addresses"},{"ancestorTitles":["ValidationService","validateNearAccountId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateNearAccountId should validate correct NEAR account IDs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct NEAR account IDs"},{"ancestorTitles":["ValidationService","validateNearAccountId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateNearAccountId should reject invalid NEAR account IDs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid NEAR account IDs"},{"ancestorTitles":["ValidationService","validateAmount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAmount should validate correct amounts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct amounts"},{"ancestorTitles":["ValidationService","validateAmount"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAmount should reject invalid amounts","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid amounts"},{"ancestorTitles":["ValidationService","validateSecretHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateSecretHash should validate correct secret hashes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct secret hashes"},{"ancestorTitles":["ValidationService","validateSecretHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateSecretHash should reject invalid secret hashes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid secret hashes"},{"ancestorTitles":["ValidationService","validateTransactionHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateTransactionHash should validate correct Ethereum transaction hashes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct Ethereum transaction hashes"},{"ancestorTitles":["ValidationService","validateTransactionHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateTransactionHash should validate correct NEAR transaction hashes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct NEAR transaction hashes"},{"ancestorTitles":["ValidationService","validateTransactionHash"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateTransactionHash should reject invalid transaction hashes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid transaction hashes"},{"ancestorTitles":["ValidationService","validateMessageId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateMessageId should validate correct message IDs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct message IDs"},{"ancestorTitles":["ValidationService","validateMessageId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateMessageId should reject invalid message IDs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid message IDs"},{"ancestorTitles":["ValidationService","validateTimelock"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateTimelock should validate correct timelock values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct timelock values"},{"ancestorTitles":["ValidationService","validateTimelock"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateTimelock should reject invalid timelock values","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid timelock values"},{"ancestorTitles":["ValidationService","validateCrossChainMessage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateCrossChainMessage should validate correct cross-chain messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct cross-chain messages"},{"ancestorTitles":["ValidationService","validateCrossChainMessage"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateCrossChainMessage should reject invalid cross-chain messages","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid cross-chain messages"},{"ancestorTitles":["ValidationService","validateContractConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateContractConfig should validate correct contract configurations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should validate correct contract configurations"},{"ancestorTitles":["ValidationService","validateContractConfig"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateContractConfig should reject invalid contract configurations","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid contract configurations"},{"ancestorTitles":["ValidationService","Error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService Error handling should throw ValidationError with proper details","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should throw ValidationError with proper details"},{"ancestorTitles":["ValidationService","Error handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService Error handling should handle edge cases gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle edge cases gracefully"},{"ancestorTitles":["ValidationService","validateAuctionConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAuctionConfig should accept a fully valid auction config","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should accept a fully valid auction config"},{"ancestorTitles":["ValidationService","validateAuctionConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAuctionConfig should allow partial config overrides","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should allow partial config overrides"},{"ancestorTitles":["ValidationService","validateAuctionConfig"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAuctionConfig should reject invalid auction configs","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid auction configs"},{"ancestorTitles":["ValidationService","validateAuctionRuntimeParams"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAuctionRuntimeParams should accept valid runtime params","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should accept valid runtime params"},{"ancestorTitles":["ValidationService","validateAuctionRuntimeParams"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ValidationService validateAuctionRuntimeParams should reject invalid runtime params","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should reject invalid runtime params"}],"endTime":1754906502571,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/ValidationService.test.ts","startTime":1754906502514,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NearPartialFillService","processPartialFill"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService processPartialFill should process a partial fill successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should process a partial fill successfully"},{"ancestorTitles":["NearPartialFillService","processPartialFill"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService processPartialFill should throw an error if the contract call fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw an error if the contract call fails"},{"ancestorTitles":["NearPartialFillService","splitOrder"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService splitOrder should split an order into multiple parts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should split an order into multiple parts"},{"ancestorTitles":["NearPartialFillService","processRefund"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService processRefund should process a refund successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should process a refund successfully"},{"ancestorTitles":["NearPartialFillService","getOrderState"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService getOrderState should return the current state of an order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return the current state of an order"},{"ancestorTitles":["NearPartialFillService","canPartiallyFill"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService canPartiallyFill should return true if the order can be partially filled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true if the order can be partially filled"},{"ancestorTitles":["NearPartialFillService","canPartiallyFill"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService canPartiallyFill should return false if the order is already fully filled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false if the order is already fully filled"},{"ancestorTitles":["NearPartialFillService","canPartiallyFill"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearPartialFillService canPartiallyFill should return false if the fill amount is too small","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false if the fill amount is too small"}],"endTime":1754906502625,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/services/NearPartialFillService.test.ts","startTime":1754906502574,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigurationService - AUCTION_* env overrides"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ConfigurationService - AUCTION_* env overrides applies AUCTION_* env variable overrides onto loaded config","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"applies AUCTION_* env variable overrides onto loaded config"}],"endTime":1754906502653,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/integration/ConfigurationServiceOverrides.test.ts","startTime":1754906502627,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Simple Test"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Simple Test should pass a basic test","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should pass a basic test"}],"endTime":1754906502667,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/SimpleTest.test.ts","startTime":1754906502655,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["NearEventListener","constructor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener constructor should initialize with default values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should initialize with default values"},{"ancestorTitles":["NearEventListener","start"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener start should start the event listener","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should start the event listener"},{"ancestorTitles":["NearEventListener","start"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener start should handle errors during startup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors during startup"},{"ancestorTitles":["NearEventListener","stop"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener stop should stop the event listener","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should stop the event listener"},{"ancestorTitles":["NearEventListener","event processing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener event processing should process a SwapOrderCreated event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should process a SwapOrderCreated event"},{"ancestorTitles":["NearEventListener","event processing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener event processing should handle invalid event JSON","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle invalid event JSON"},{"ancestorTitles":["NearEventListener","Error Handling"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener Error Handling should handle block processing errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle block processing errors"},{"ancestorTitles":["NearEventListener","Error Handling"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener Error Handling should handle chunk processing errors","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle chunk processing errors"},{"ancestorTitles":["NearEventListener","Block Processing"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener Block Processing should skip already processed blocks","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should skip already processed blocks"},{"ancestorTitles":["NearEventListener","Block Processing"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener Block Processing should handle empty blocks","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle empty blocks"},{"ancestorTitles":["NearEventListener","Concurrency"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"NearEventListener Concurrency should handle concurrent block processing","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle concurrent block processing"}],"endTime":1754906502682,"message":"","name":"/Users/defiankit/Desktop/fusionswapn/cross-chain-resolver-example/relayer/tests/unit/NearEventListener.test.ts","startTime":1754906502669,"status":"focused","summary":""}],"wasInterrupted":false}
